#!/bin/bash

BASE_DIR="/a/b/c/log"
selected_date=""
LOG_DIR=""
LOG_IN=""
LOG_OUT=""
LOG_PROCESS=""

# M√†u s·∫Øc
NC='\033[0m' # No Color
RED='\033[1;31m'
GREEN='\033[1;32m'
YELLOW='\033[1;33m'
BLUE='\033[1;34m'
CYAN='\033[1;36m'
BOLD='\033[1m'

# ===== CH·ªåN NG√ÄY LOG =====
choose_date() {
    echo -e "\n${CYAN}üîç ƒêang t√¨m th∆∞ m·ª•c log trong $BASE_DIR...${NC}"

    available_dates=($(find "$BASE_DIR" -maxdepth 1 -type d -printf "%f\n" | grep -E '^[0-9]{8}$' | sort -r | head -n 10))

    if [[ ${#available_dates[@]} -eq 0 ]]; then
        echo -e "${RED}‚ùå Kh√¥ng c√≥ th∆∞ m·ª•c log h·ª£p l·ªá trong $BASE_DIR${NC}"
        exit 1
    fi

    echo -e "${BLUE}üóÇÔ∏è  C√°c ng√†y log g·∫ßn nh·∫•t:${NC}"
    for i in "${!available_dates[@]}"; do
        echo -e "${YELLOW}$((i+1)))${NC} ${available_dates[$i]}"
    done

    read -p "$(echo -e "${BOLD}üî¢ Ch·ªçn s·ªë t∆∞∆°ng ·ª©ng (1-${#available_dates[@]}):${NC} ")" day_choice

    if [[ "$day_choice" =~ ^[0-9]+$ ]] && (( day_choice >= 1 && day_choice <= ${#available_dates[@]} )); then
        selected_date="${available_dates[$((day_choice-1))]}"
        LOG_DIR="$BASE_DIR/$selected_date"
        LOG_IN="$LOG_DIR/log-in.log"
        LOG_OUT="$LOG_DIR/log-out.log"
        LOG_PROCESS="$LOG_DIR/log-process.log"
        echo -e "${GREEN}‚úÖ ƒê√£ ch·ªçn: $LOG_DIR${NC}"
    else
        echo -e "${RED}‚ùå L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá. Tho√°t.${NC}"
        exit 1
    fi
}

# ===== CH·ªåN FILE LOG =====
choose_log_file() {
    read -p "$(echo -e "${BOLD}üî¢ Nh·∫≠p s·ªë t∆∞∆°ng ·ª©ng (1:log-in, 2:log-out, 3:log-process):${NC} ")" log_choice

    case "$log_choice" in
        1) log_file="$LOG_IN" ;;
        2) log_file="$LOG_OUT" ;;
        3) log_file="$LOG_PROCESS" ;;
        *) log_file="none" ;;
    esac

    echo "$log_file"
}

# ======= H·ªéI GHI FILE ========
ask_save_file() {
    local output_file="$1"
    read -p "$(echo -e "${YELLOW}üíæ B·∫°n c√≥ mu·ªën ghi k·∫øt qu·∫£ ra t·ªáp '$output_file'? (y/n): ${NC}")" save_choice
    if [[ "$save_choice" =~ ^[Yy]$ ]]; then
        echo "yes"
    else
        echo "no"
    fi
}

# ===== B·∫ÆT BU·ªòC CH·ªåN NG√ÄY BAN ƒê·∫¶U =====
echo -e "${BOLD}${CYAN}===== CH·ªåN NG√ÄY LOG =====${NC}"
choose_date

# ===== MENU CH√çNH =====
while true; do
    echo -e "\n${BOLD}${BLUE}===== MENU CH√çNH (Ng√†y: $selected_date) =====${NC}"
    echo -e "${YELLOW}1)${NC} ƒê·∫øm s·ªë d√≤ng trong log"
    echo -e "${YELLOW}2)${NC} T√¨m ki·∫øm t√™n file trong log"
    echo -e "${YELLOW}3)${NC} So s√°nh m√£ file (.csv & .fin) gi·ªØa log-in v√† log-process"
    echo -e "${YELLOW}4)${NC} Ki·ªÉm tra file tr√πng trong log-out.log"
    echo -e "${YELLOW}5)${NC} üîÅ Ch·ªçn l·∫°i ng√†y log"
    echo -e "${YELLOW}0)${NC} Tho√°t"
    echo -e "${BOLD}=============================================${NC}"
    read -p "$(echo -e "${BOLD}Ch·ªçn m·ªôt t√πy ch·ªçn (0-5):${NC} ")" choice

    case "$choice" in
        1)
            echo -e "\n${CYAN}===== CH·ªåN FILE LOG =====${NC}"
            echo -e "1) log-in.log      (${GREEN}$LOG_IN${NC})"
            echo -e "2) log-out.log     (${GREEN}$LOG_OUT${NC})"
            echo -e "3) log-process.log (${GREEN}$LOG_PROCESS${NC})"
            echo "========================="
            log_file=$(choose_log_file)
            if [[ "$log_file" == "none" || ! -f "$log_file" ]]; then
                echo -e "${RED}‚ùå L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá ho·∫∑c file kh√¥ng t·ªìn t·∫°i!${NC}"
            else
                count=$(wc -l < "$log_file")
                echo -e "${GREEN}‚úÖ S·ªë d√≤ng trong $(basename "$log_file"): $count d√≤ng${NC}"
            fi
            ;;
        2)
            echo -e "\n${CYAN}===== CH·ªåN FILE LOG =====${NC}"
            echo -e "1) log-in.log      (${GREEN}$LOG_IN${NC})"
            echo -e "2) log-out.log     (${GREEN}$LOG_OUT${NC})"
            echo -e "3) log-process.log (${GREEN}$LOG_PROCESS${NC})"
            echo "========================="
            log_file=$(choose_log_file)
            if [[ "$log_file" == "none" || ! -f "$log_file" ]]; then
                echo -e "${RED}‚ùå L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá ho·∫∑c file kh√¥ng t·ªìn t·∫°i!${NC}"
            else
                read -p "$(echo -e "${BOLD}Nh·∫≠p t·ª´ kh√≥a c·∫ßn t√¨m:${NC} ")" keyword
                echo -e "${CYAN}üìÇ K·∫øt qu·∫£ t√¨m '${YELLOW}$keyword${CYAN}' trong ${BOLD}$(basename "$log_file")${NC}:"
                grep --color=always "$keyword" "$log_file" || echo -e "${YELLOW}‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y!${NC}"
            fi
            ;;
        3)
            if [[ ! -f "$LOG_IN" || ! -f "$LOG_PROCESS" ]]; then
                echo -e "${RED}‚ùå Thi·∫øu log-in.log ho·∫∑c log-process.log!${NC}"
                continue
            fi

            echo -e "${CYAN}üîç So s√°nh m√£ DTxxxxx gi·ªØa log-in v√† log-process...${NC}"

            awk '{print $2}' "$LOG_IN" \
                | grep -E '\.csv$|\.fin$' \
                | grep -oE 'DT[0-9]+' \
                | sort -u > /tmp/in_codes.txt

            awk '{print $2}' "$LOG_PROCESS" \
                | sed 's/^processed-//' \
                | grep -E '\.csv$|\.fin$' \
                | grep -oE 'DT[0-9]+' \
                | sort -u > /tmp/process_codes.txt

            DIFF_OUTPUT="./diff_result_$selected_date.txt"
            comm -23 /tmp/in_codes.txt /tmp/process_codes.txt > "$DIFF_OUTPUT"

            count_diff=$(wc -l < "$DIFF_OUTPUT")
            echo -e "${GREEN}‚úÖ T·ªïng s·ªë m√£ DT kh√°c bi·ªát: $count_diff${NC}"

            if [[ "$(ask_save_file "$DIFF_OUTPUT")" == "yes" ]]; then
                echo -e "${GREEN}‚úÖ ƒê√£ ghi c√°c m√£ DT ch∆∞a x·ª≠ l√Ω v√†o: $DIFF_OUTPUT${NC}"
            else
                echo -e "${CYAN}K·∫øt qu·∫£:${NC}"
                cat "$DIFF_OUTPUT"
                rm -f "$DIFF_OUTPUT"
            fi

            # --------- So s√°nh FILE KH√ÅC ----------
            awk '{print $2}' "$LOG_IN" \
                | grep -E '\.csv$|\.fin$' \
                | grep -vE 'DT[0-9]+' \
                | sort -u > /tmp/in_others.txt

            awk '{print $2}' "$LOG_PROCESS" \
                | sed 's/^processed-//' \
                | grep -E '\.csv$|\.fin$' \
                | grep -vE 'DT[0-9]+' \
                | sort -u > /tmp/process_others.txt

            OTHERS_IN_ONLY="./others_in_only_$selected_date.txt"
            OTHERS_PROCESS_ONLY="./others_process_only_$selected_date.txt"

            comm -23 /tmp/in_others.txt /tmp/process_others.txt > "$OTHERS_IN_ONLY"
            comm -13 /tmp/in_others.txt /tmp/process_others.txt > "$OTHERS_PROCESS_ONLY"

            cnt_in_only=$(wc -l < "$OTHERS_IN_ONLY")
            cnt_process_only=$(wc -l < "$OTHERS_PROCESS_ONLY")
            echo -e "${GREEN}‚úÖ C√°c file kh√°c ch·ªâ c√≥ trong log-in: $cnt_in_only${NC}"
            echo -e "${GREEN}‚úÖ C√°c file kh√°c ch·ªâ c√≥ trong log-process: $cnt_process_only${NC}"

            if [[ "$(ask_save_file "$OTHERS_IN_ONLY")" != "yes" ]]; then
                echo -e "${CYAN}C√°c file kh√°c ch·ªâ c√≥ trong log-in:${NC}"
                cat "$OTHERS_IN_ONLY"
                rm -f "$OTHERS_IN_ONLY"
            else
                echo -e "${GREEN}ƒê√£ ghi danh s√°ch v√†o $OTHERS_IN_ONLY${NC}"
            fi

            if [[ "$(ask_save_file "$OTHERS_PROCESS_ONLY")" != "yes" ]]; then
                echo -e "${CYAN}C√°c file kh√°c ch·ªâ c√≥ trong log-process:${NC}"
                cat "$OTHERS_PROCESS_ONLY"
                rm -f "$OTHERS_PROCESS_ONLY"
            else
                echo -e "${GREEN}ƒê√£ ghi danh s√°ch v√†o $OTHERS_PROCESS_ONLY${NC}"
            fi
            ;;
        4)
            if [[ ! -f "$LOG_OUT" ]]; then
                echo -e "${RED}‚ùå log-out.log kh√¥ng t·ªìn t·∫°i!${NC}"
                continue
            fi

            echo -e "${CYAN}üîç ƒêang ki·ªÉm tra file tr√πng trong log-out.log...${NC}"

            # Ki·ªÉm tra tr√πng file .csv (match c·∫£ t√™n d√†i processed-ABC-DTxxxx-vxxxxx.csv)
            awk '{print $2}' "$LOG_OUT" | grep -E '^processed-ABC-DT[0-9]+.*\.csv$' | sort | uniq -d > ./dup_csv_out_$selected_date.txt
            # Ki·ªÉm tra tr√πng file .fin (match c·∫£ t√™n d√†i processed-DTxxxx-vxxxxx.fin)
            awk '{print $2}' "$LOG_OUT" | grep -E '^processed-DT[0-9]+.*\.fin$' | sort | uniq -d > ./dup_fin_out_$selected_date.txt

            if [[ -s ./dup_csv_out_$selected_date.txt ]]; then
                echo -e "${YELLOW}‚ö†Ô∏è C√°c file .csv tr√πng!${NC}"
                if [[ "$(ask_save_file ./dup_csv_out_$selected_date.txt)" == "yes" ]]; then
                    echo -e "${GREEN}‚úÖ Danh s√°ch file .csv tr√πng ƒë√£ l∆∞u ·ªü ./dup_csv_out_$selected_date.txt${NC}"
                else
                    cat ./dup_csv_out_$selected_date.txt
                    rm -f ./dup_csv_out_$selected_date.txt
                fi
            else
                echo -e "${GREEN}‚úÖ Kh√¥ng ph√°t hi·ªán file .csv n√†o b·ªã tr√πng!${NC}"
                rm -f ./dup_csv_out_$selected_date.txt
            fi

            if [[ -s ./dup_fin_out_$selected_date.txt ]]; then
                echo -e "${YELLOW}‚ö†Ô∏è C√°c file .fin tr√πng!${NC}"
                if [[ "$(ask_save_file ./dup_fin_out_$selected_date.txt)" == "yes" ]]; then
                    echo -e "${GREEN}‚úÖ Danh s√°ch file .fin tr√πng ƒë√£ l∆∞u ·ªü ./dup_fin_out_$selected_date.txt${NC}"
                else
                    cat ./dup_fin_out_$selected_date.txt
                    rm -f ./dup_fin_out_$selected_date.txt
                fi
            else
                echo -e "${GREEN}‚úÖ Kh√¥ng ph√°t hi·ªán file .fin n√†o b·ªã tr√πng!${NC}"
                rm -f ./dup_fin_out_$selected_date.txt
            fi
            ;;

        5)
            choose_date
            ;;
        0)
            echo -e "${BOLD}${CYAN}üëã Tho√°t ch∆∞∆°ng tr√¨nh. H·∫πn g·∫∑p l·∫°i!${NC}"
            exit 0
            ;;
        *)
            echo -e "${RED}‚ö†Ô∏è L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá. Vui l√≤ng th·ª≠ l·∫°i.${NC}"
            ;;
    esac
done
